# Generated by Django 2.0.5 on 2018-07-05 17:11

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AssetProvider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset_provider_name', models.CharField(max_length=64, unique=True, verbose_name='供应商名称')),
                ('asset_provider_contact', models.CharField(blank=True, max_length=32, null=True, verbose_name='技术支持人员')),
                ('asset_provider_telephone', models.SmallIntegerField(blank=True, null=True, verbose_name='支持电话')),
                ('asset_provider_memo', models.CharField(blank=True, max_length=128, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '供应商表',
                'verbose_name_plural': '供应商表',
                'db_table': 'ops_asset_provider',
            },
        ),
        migrations.CreateModel(
            name='Assets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset_type', models.CharField(choices=[('server', '服务器'), ('network', '网络设备'), ('office', '办公设备'), ('security', '安全设备'), ('storage', '存储设备'), ('software', '软件资产')], default='server', max_length=100, verbose_name='资产类型')),
                ('asset_nu', models.CharField(max_length=100, unique=True, verbose_name='资产编号')),
                ('asset_model', models.CharField(blank=True, max_length=100, null=True, verbose_name='资产型号')),
                ('asset_status', models.SmallIntegerField(blank=True, choices=[(0, '已上线'), (1, '已下线'), (2, '维修中'), (3, '故障'), (4, '未使用')], null=True, verbose_name='状态')),
                ('asset_management_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='管理IP')),
                ('asset_purchase_day', models.DateField(blank=True, null=True, verbose_name='购买日期')),
                ('asset_expire_day', models.DateField(blank=True, null=True, verbose_name='过保日期')),
                ('asset_price', models.FloatField(blank=True, null=True, verbose_name='价格')),
                ('asset_create_time', models.DateTimeField(auto_now_add=True)),
                ('asset_update_time', models.DateTimeField(auto_now_add=True)),
                ('asset_memo', models.TextField(blank=True, help_text='配置说明或一些注意事项', null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '总资产表',
                'verbose_name_plural': '总资产表',
                'db_table': 'ops_assets',
                'ordering': ['-asset_create_time'],
                'permissions': (('can_read_assets', '读取资产权限'), ('can_change_assets', '更改资产权限'), ('can_add_assets', '添加资产权限'), ('can_delete_assets', '删除资产权限'), ('can_dumps_assets', '导出资产权限')),
            },
        ),
        migrations.CreateModel(
            name='Cabinets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cabinets_name', models.CharField(max_length=64, unique=True, verbose_name='机柜名称')),
                ('cabinets_memo', models.CharField(blank=True, max_length=100, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '机柜表',
                'verbose_name_plural': '机柜表',
                'db_table': 'ops_cabinets',
            },
        ),
        migrations.CreateModel(
            name='DiskAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disk_volume', models.CharField(blank=True, max_length=100, null=True, verbose_name='硬盘容量')),
                ('disk_status', models.CharField(blank=True, max_length=100, null=True, verbose_name='硬盘状态')),
                ('disk_model', models.CharField(blank=True, max_length=100, null=True, verbose_name='硬盘型号')),
                ('disk_brand', models.CharField(blank=True, max_length=100, null=True, verbose_name='硬盘生产商')),
                ('disk_serial', models.CharField(blank=True, max_length=100, null=True, verbose_name='硬盘序列号')),
                ('disk_slot', models.SmallIntegerField(blank=True, null=True, verbose_name='硬盘插槽')),
            ],
            options={
                'verbose_name': '磁盘资产表',
                'verbose_name_plural': '磁盘资产表',
                'db_table': 'ops_disk_assets',
                'permissions': (('can_read_disk_assets', '读取磁盘资产权限'), ('can_change_disk_assets', '更改磁盘资产权限'), ('can_add_disk_assets', '添加磁盘资产权限'), ('can_delete_disk_assets', '删除磁盘资产权限')),
            },
        ),
        migrations.CreateModel(
            name='IDC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idc_name', models.CharField(max_length=64, unique=True, verbose_name='机房名称')),
                ('city', models.SmallIntegerField(choices=[(0, '北京'), (1, '上海')], verbose_name='所在城市')),
                ('idc_address', models.CharField(max_length=100, unique=True, verbose_name='机房地址')),
                ('idc_contact', models.CharField(max_length=32, unique=True, verbose_name='机房联系人')),
                ('idc_telephone', models.SmallIntegerField(blank=True, null=True, verbose_name='支持电话')),
                ('idc_memo', models.CharField(blank=True, max_length=100, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '机房表',
                'verbose_name_plural': '机房表',
                'db_table': 'ops_idc',
            },
        ),
        migrations.CreateModel(
            name='NetworkAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('network_type', models.SmallIntegerField(choices=[(0, '路由器'), (1, '交换机'), (2, '负载均衡'), (3, 'wifi'), (4, 'VPN'), (5, '其它')], default=0, verbose_name='网络设备类型')),
                ('port_number', models.SmallIntegerField(blank=True, null=True, verbose_name='端口个数')),
                ('firmware', models.CharField(blank=True, max_length=100, null=True, verbose_name='固件版本')),
                ('asset', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='assets.Assets')),
            ],
            options={
                'verbose_name': '网络资产表',
                'verbose_name_plural': '网络资产表',
                'db_table': 'ops_network_assets',
                'permissions': (('can_read_network_assets', '读取网络资产权限'), ('can_change_network_assets', '更改网络资产权限'), ('can_add_network_assets', '添加网络资产权限'), ('can_delete_network_assets', '删除网络资产权限')),
            },
        ),
        migrations.CreateModel(
            name='NetworkCardAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('network_card_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='网卡名称')),
                ('network_card_mac', models.CharField(blank=True, max_length=64, null=True, verbose_name='MAC地址')),
                ('network_card_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP地址')),
                ('network_card_model', models.CharField(blank=True, max_length=50, null=True, verbose_name='网卡类型')),
                ('network_card_mtu', models.CharField(blank=True, max_length=50, null=True, verbose_name='MTU')),
                ('network_card_status', models.SmallIntegerField(blank=True, null=True, verbose_name='网卡状态')),
            ],
            options={
                'verbose_name': '服务器网卡资产表',
                'verbose_name_plural': '服务器网卡资产表',
                'db_table': 'ops_network_card_assets',
                'permissions': (('can_read_ram_assets', '读取网卡资产权限'), ('can_change_ram_assets', '更改网卡资产权限'), ('can_add_ram_assets', '添加网卡资产权限'), ('can_delete_ram_assets', '删除网卡资产权限')),
            },
        ),
        migrations.CreateModel(
            name='OfficeAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('office_type', models.SmallIntegerField(choices=[(0, 'PC机'), (1, '打印机'), (2, '扫描仪'), (3, '其它')], default=0, verbose_name='办公设备类型')),
                ('asset', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='assets.Assets')),
            ],
            options={
                'verbose_name': '办公资产表',
                'verbose_name_plural': '办公资产表',
                'db_table': 'ops_office_assets',
                'permissions': (('can_read_office_assets', '读取办公资产权限'), ('can_change_office_assets', '更改办公络资产权限'), ('can_add_office_assets', '添加办公资产权限'), ('can_delete_office_assets', '删除办公资产权限')),
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=64, unique=True, verbose_name='项目名称')),
                ('project_memo', models.CharField(blank=True, max_length=100, null=True, verbose_name='基本描述')),
                ('parent_project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='parent_level', to='assets.Project')),
            ],
            options={
                'verbose_name': '项目表',
                'verbose_name_plural': '项目表',
                'db_table': 'ops_project',
                'permissions': (('can_read_project', '读取项目权限'), ('can_change_project', '更改项目权限'), ('can_add_project', '添加项目权限'), ('can_delete_project', '删除项目权限')),
            },
        ),
        migrations.CreateModel(
            name='RamAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ram_model', models.CharField(blank=True, max_length=100, null=True, verbose_name='内存型号')),
                ('ram_volume', models.CharField(blank=True, max_length=100, null=True, verbose_name='内存容量')),
                ('ram_brand', models.CharField(blank=True, max_length=100, null=True, verbose_name='内存生产商')),
                ('ram_slot', models.SmallIntegerField(blank=True, null=True, verbose_name='内存插槽')),
                ('ram_status', models.CharField(blank=True, max_length=100, null=True, verbose_name='内存状态')),
            ],
            options={
                'verbose_name': '内存资产表',
                'verbose_name_plural': '内存资产表',
                'db_table': 'ops_ram_assets',
                'permissions': (('can_read_ram_assets', '读取内存资产权限'), ('can_change_ram_assets', '更改内存资产权限'), ('can_add_ram_assets', '添加内存资产权限'), ('can_delete_ram_assets', '删除内存资产权限')),
            },
        ),
        migrations.CreateModel(
            name='SecurityAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('security_type', models.SmallIntegerField(choices=[(0, '防火墙'), (1, '网关'), (2, '其它')], default=0, verbose_name='安全设备类型')),
                ('asset', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='assets.Assets')),
            ],
            options={
                'verbose_name': '安全资产表',
                'verbose_name_plural': '安全资产表',
                'db_table': 'ops_security_assets',
                'permissions': (('can_read_security_assets', '读取安全资产权限'), ('can_change_security_assets', '更改安全络资产权限'), ('can_add_security_assets', '添加安全资产权限'), ('can_delete_security_assets', '删除安全资产权限')),
            },
        ),
        migrations.CreateModel(
            name='ServerAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('server_type', models.SmallIntegerField(choices=[(0, '物理机'), (1, '虚拟机'), (2, '云主机')], default=0, verbose_name='服务器类型')),
                ('server_ip', models.GenericIPAddressField(unique=True, verbose_name='IP地址')),
                ('username', models.CharField(blank=True, max_length=100, null=True)),
                ('port', models.DecimalField(blank=True, decimal_places=0, max_digits=6, null=True)),
                ('password', models.CharField(blank=True, max_length=100, null=True)),
                ('hostname', models.CharField(blank=True, max_length=100, null=True)),
                ('cpu_model', models.CharField(blank=True, max_length=100, null=True, verbose_name='CPU型号')),
                ('cpu_number', models.SmallIntegerField(blank=True, null=True, verbose_name='物理CPU个数')),
                ('vcpu_number', models.SmallIntegerField(blank=True, null=True, verbose_name='逻辑CPU个数')),
                ('disk_total', models.IntegerField(blank=True, null=True, verbose_name='磁盘空间')),
                ('ram_total', models.SmallIntegerField(blank=True, null=True, verbose_name='内存容量')),
                ('kernel', models.CharField(blank=True, max_length=100, null=True, verbose_name='内核版本')),
                ('system', models.CharField(blank=True, max_length=100, null=True, verbose_name='操作系统')),
                ('asset', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='assets.Assets')),
                ('hosted_on', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='hosted_on_server', to='assets.ServerAssets', verbose_name='宿主机')),
            ],
            options={
                'verbose_name': '服务器资产表',
                'verbose_name_plural': '服务器资产表',
                'db_table': 'ops_server_assets',
                'permissions': (('can_read_server_assets', '读取服务器资产权限'), ('can_change_server_assets', '更改服务器资产权限'), ('can_add_server_assets', '添加服务器资产权限'), ('can_delete_server_assets', '删除服务器资产权限')),
            },
        ),
        migrations.CreateModel(
            name='SoftwareAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('software_type', models.SmallIntegerField(choices=[(0, '操作系统'), (1, '办公/开发软件'), (2, '业务软件')], default=0, verbose_name='软件类型')),
                ('asset', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='assets.Assets')),
            ],
            options={
                'verbose_name': '软件资产表',
                'verbose_name_plural': '软件资产表',
                'db_table': 'ops_software_assets',
                'permissions': (('can_read_software_assets', '读取软件资产权限'), ('can_change_software_assets', '更改软件资产权限'), ('can_add_software_assets', '添加软件资产权限'), ('can_delete_software_assets', '删除软件资产权限')),
            },
        ),
        migrations.CreateModel(
            name='StorageAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('storage_type', models.SmallIntegerField(choices=[(0, '防火墙'), (1, '网关'), (2, '其它')], default=0, verbose_name='存储设备类型')),
                ('asset', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='assets.Assets')),
            ],
            options={
                'verbose_name': '存储资产表',
                'verbose_name_plural': '存储资产表',
                'db_table': 'ops_storage_assets',
                'permissions': (('can_read_storage_assets', '读取安全资产权限'), ('can_change_storage_assets', '更改安全络资产权限'), ('can_add_storage_assets', '添加安全资产权限'), ('can_delete_storage_assets', '删除安全资产权限')),
            },
        ),
        migrations.AddField(
            model_name='ramassets',
            name='asset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='assets.ServerAssets'),
        ),
        migrations.AddField(
            model_name='networkcardassets',
            name='asset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='assets.ServerAssets'),
        ),
        migrations.AddField(
            model_name='diskassets',
            name='asset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='assets.ServerAssets'),
        ),
        migrations.AddField(
            model_name='cabinets',
            name='idc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='assets.IDC'),
        ),
    ]
