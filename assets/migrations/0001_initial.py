# Generated by Django 2.0.5 on 2018-07-20 15:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AssetProvider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset_provider_name', models.CharField(max_length=64, unique=True, verbose_name='供应商名称')),
                ('asset_provider_contact', models.CharField(blank=True, max_length=32, null=True, verbose_name='技术支持人员')),
                ('asset_provider_telephone', models.CharField(blank=True, max_length=11, null=True, verbose_name='支持电话')),
                ('asset_provider_memo', models.CharField(blank=True, max_length=128, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '供应商表',
                'verbose_name_plural': '供应商表',
                'db_table': 'ops_asset_provider',
            },
        ),
        migrations.CreateModel(
            name='Assets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset_type', models.CharField(choices=[('server', '服务器'), ('network', '网络设备'), ('office', '办公设备'), ('security', '安全设备'), ('storage', '存储设备'), ('software', '软件资产')], default='server', max_length=100, verbose_name='资产类型')),
                ('asset_nu', models.CharField(max_length=100, unique=True, verbose_name='资产编号')),
                ('asset_model', models.CharField(blank=True, max_length=100, null=True, verbose_name='资产型号')),
                ('asset_status', models.SmallIntegerField(choices=[(0, '已上线'), (1, '已下线'), (2, '故障中'), (3, '未使用')], default=0, verbose_name='状态')),
                ('asset_management_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='管理IP')),
                ('asset_purchase_day', models.DateField(blank=True, null=True, verbose_name='购买日期')),
                ('asset_expire_day', models.DateField(blank=True, null=True, verbose_name='过保日期')),
                ('asset_price', models.CharField(blank=True, max_length=100, null=True, verbose_name='价格(万元)')),
                ('asset_create_time', models.DateTimeField(auto_now_add=True)),
                ('asset_update_time', models.DateTimeField(auto_now_add=True)),
                ('asset_memo', models.TextField(blank=True, help_text='配置说明或一些注意事项', null=True, verbose_name='备注')),
                ('asset_admin', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='assets', to=settings.AUTH_USER_MODEL, verbose_name='资产管理员')),
            ],
            options={
                'verbose_name': '总资产表',
                'verbose_name_plural': '总资产表',
                'db_table': 'ops_assets',
            },
        ),
        migrations.CreateModel(
            name='AssetsLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=16, verbose_name='操作用户')),
                ('remote_ip', models.GenericIPAddressField(verbose_name='操作用户IP')),
                ('content', models.CharField(max_length=100, verbose_name='操作内容')),
                ('c_time', models.DateTimeField(auto_now_add=True, verbose_name='操作时间')),
            ],
            options={
                'verbose_name': '资产管理操作记录表',
                'verbose_name_plural': '资产管理操作记录表',
                'db_table': 'ops_assets_log',
            },
        ),
        migrations.CreateModel(
            name='Cabinet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cabinet_name', models.CharField(max_length=64, unique=True, verbose_name='机柜名称')),
                ('cabinet_memo', models.CharField(blank=True, max_length=100, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '机柜表',
                'verbose_name_plural': '机柜表',
                'db_table': 'ops_cabinet',
            },
        ),
        migrations.CreateModel(
            name='DiskAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disk_volume', models.CharField(blank=True, max_length=100, null=True, verbose_name='硬盘容量')),
                ('disk_status', models.CharField(blank=True, max_length=100, null=True, verbose_name='硬盘状态')),
                ('disk_model', models.CharField(blank=True, max_length=100, null=True, verbose_name='硬盘型号')),
                ('disk_brand', models.CharField(blank=True, max_length=100, null=True, verbose_name='硬盘生产商')),
                ('disk_serial', models.CharField(blank=True, max_length=100, null=True, verbose_name='硬盘序列号')),
                ('disk_slot', models.SmallIntegerField(blank=True, null=True, verbose_name='硬盘插槽')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='disk_assets', to='assets.Assets')),
            ],
            options={
                'verbose_name': '磁盘资产表',
                'verbose_name_plural': '磁盘资产表',
                'db_table': 'ops_disk_assets',
            },
        ),
        migrations.CreateModel(
            name='IDC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idc_name', models.CharField(max_length=64, unique=True, verbose_name='机房名称')),
                ('idc_address', models.CharField(max_length=100, unique=True, verbose_name='机房地址')),
                ('idc_contact', models.CharField(max_length=32, unique=True, verbose_name='机房联系人')),
                ('idc_telephone', models.CharField(blank=True, max_length=11, null=True, verbose_name='支持电话')),
                ('idc_memo', models.CharField(blank=True, max_length=100, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '机房表',
                'verbose_name_plural': '机房表',
                'db_table': 'ops_idc',
            },
        ),
        migrations.CreateModel(
            name='NetworkAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('network_type', models.SmallIntegerField(choices=[(0, '路由器'), (1, '交换机'), (2, '负载均衡'), (3, 'wifi'), (4, 'VPN'), (5, '其它')], default=0, verbose_name='网络设备类型')),
                ('assets', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='assets.Assets')),
            ],
            options={
                'verbose_name': '网络资产表',
                'verbose_name_plural': '网络资产表',
                'db_table': 'ops_network_assets',
            },
        ),
        migrations.CreateModel(
            name='NetworkCardAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('network_card_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='网卡名称')),
                ('network_card_mac', models.CharField(blank=True, max_length=64, null=True, verbose_name='MAC地址')),
                ('network_card_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP地址')),
                ('network_card_model', models.CharField(blank=True, max_length=50, null=True, verbose_name='网卡类型')),
                ('network_card_mtu', models.CharField(blank=True, max_length=50, null=True, verbose_name='MTU')),
                ('network_card_status', models.SmallIntegerField(blank=True, null=True, verbose_name='网卡状态')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='network_card_assets', to='assets.Assets')),
            ],
            options={
                'verbose_name': '服务器网卡资产表',
                'verbose_name_plural': '服务器网卡资产表',
                'db_table': 'ops_network_card_assets',
            },
        ),
        migrations.CreateModel(
            name='OfficeAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('office_type', models.SmallIntegerField(choices=[(0, 'PC机'), (1, '打印机'), (2, '扫描仪'), (3, '其它')], default=0, verbose_name='办公设备类型')),
                ('assets', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='assets.Assets')),
            ],
            options={
                'verbose_name': '办公资产表',
                'verbose_name_plural': '办公资产表',
                'db_table': 'ops_office_assets',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=64, unique=True, verbose_name='项目名称')),
                ('project_memo', models.CharField(blank=True, max_length=100, null=True, verbose_name='基本描述')),
                ('parent_project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='parent_level', to='assets.Project')),
            ],
            options={
                'verbose_name': '项目表',
                'verbose_name_plural': '项目表',
                'db_table': 'ops_project',
            },
        ),
        migrations.CreateModel(
            name='RamAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ram_model', models.CharField(blank=True, max_length=100, null=True, verbose_name='内存型号')),
                ('ram_volume', models.CharField(blank=True, max_length=100, null=True, verbose_name='内存容量')),
                ('ram_brand', models.CharField(blank=True, max_length=100, null=True, verbose_name='内存生产商')),
                ('ram_slot', models.SmallIntegerField(blank=True, null=True, verbose_name='内存插槽')),
                ('ram_status', models.CharField(blank=True, max_length=100, null=True, verbose_name='内存状态')),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ram_assets', to='assets.Assets')),
            ],
            options={
                'verbose_name': '内存资产表',
                'verbose_name_plural': '内存资产表',
                'db_table': 'ops_ram_assets',
            },
        ),
        migrations.CreateModel(
            name='SecurityAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('security_type', models.SmallIntegerField(choices=[(0, '防火墙'), (1, '网关'), (2, '其它')], default=0, verbose_name='安全设备类型')),
                ('assets', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='assets.Assets')),
            ],
            options={
                'verbose_name': '安全资产表',
                'verbose_name_plural': '安全资产表',
                'db_table': 'ops_security_assets',
            },
        ),
        migrations.CreateModel(
            name='ServerAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('server_type', models.SmallIntegerField(choices=[(0, '物理机'), (1, '虚拟机'), (2, '云主机')], default=0, verbose_name='服务器类型')),
                ('username', models.CharField(blank=True, max_length=100, null=True, verbose_name='用户名称')),
                ('auth_type', models.SmallIntegerField(choices=[(0, '密钥认证'), (1, '账户密码')], default=0, verbose_name='认证方式')),
                ('password', models.CharField(blank=True, max_length=100, null=True, verbose_name='用户密码')),
                ('port', models.DecimalField(blank=True, decimal_places=0, max_digits=6, null=True, verbose_name='SSH端口')),
                ('hostname', models.CharField(blank=True, max_length=100, null=True, verbose_name='主机名称')),
                ('cpu_model', models.CharField(blank=True, max_length=100, null=True, verbose_name='CPU型号')),
                ('cpu_number', models.SmallIntegerField(blank=True, null=True, verbose_name='物理CPU个数')),
                ('vcpu_number', models.SmallIntegerField(blank=True, null=True, verbose_name='逻辑CPU个数')),
                ('disk_total', models.IntegerField(blank=True, null=True, verbose_name='磁盘空间')),
                ('ram_total', models.SmallIntegerField(blank=True, null=True, verbose_name='内存容量')),
                ('kernel', models.CharField(blank=True, max_length=100, null=True, verbose_name='内核版本')),
                ('system', models.CharField(blank=True, max_length=100, null=True, verbose_name='操作系统')),
                ('assets', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='assets.Assets')),
                ('hosted_on', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='hosted_on_server', to='assets.ServerAssets', verbose_name='宿主机')),
            ],
            options={
                'verbose_name': '服务器资产表',
                'verbose_name_plural': '服务器资产表',
                'db_table': 'ops_server_assets',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(help_text='数据库、中间件等', max_length=32, verbose_name='服务名称')),
                ('project_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='service', to='assets.Project')),
                ('service_assets', models.ManyToManyField(to='assets.Assets', verbose_name='提供服务的机器')),
            ],
            options={
                'verbose_name': '服务类型表',
                'verbose_name_plural': '服务类型表',
                'db_table': 'ops_service',
            },
        ),
        migrations.CreateModel(
            name='SoftwareAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('software_type', models.SmallIntegerField(choices=[(0, '操作系统'), (1, '办公/开发软件'), (2, '业务软件')], default=0, verbose_name='软件类型')),
                ('assets', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='assets.Assets')),
            ],
            options={
                'verbose_name': '软件资产表',
                'verbose_name_plural': '软件资产表',
                'db_table': 'ops_software_assets',
            },
        ),
        migrations.CreateModel(
            name='StorageAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('storage_type', models.SmallIntegerField(choices=[(0, '磁盘阵列'), (1, '网络存储器'), (2, '磁带库'), (3, '磁带机')], default=0, verbose_name='存储设备类型')),
                ('assets', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='assets.Assets')),
            ],
            options={
                'verbose_name': '存储资产表',
                'verbose_name_plural': '存储资产表',
                'db_table': 'ops_storage_assets',
            },
        ),
        migrations.AddField(
            model_name='cabinet',
            name='idc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cabinet', to='assets.IDC'),
        ),
        migrations.AddField(
            model_name='assets',
            name='asset_cabinet',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='assets', to='assets.Cabinet', verbose_name='所在机柜'),
        ),
        migrations.AddField(
            model_name='assets',
            name='asset_idc',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='assets', to='assets.IDC', verbose_name='所在机房'),
        ),
        migrations.AddField(
            model_name='assets',
            name='asset_provider',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='assets', to='assets.AssetProvider', verbose_name='供应商'),
        ),
        migrations.AlterUniqueTogether(
            name='ramassets',
            unique_together={('asset', 'ram_slot')},
        ),
        migrations.AlterUniqueTogether(
            name='networkcardassets',
            unique_together={('asset', 'network_card_mac')},
        ),
        migrations.AlterUniqueTogether(
            name='diskassets',
            unique_together={('asset', 'disk_slot')},
        ),
    ]
